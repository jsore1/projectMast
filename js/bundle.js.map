{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;;AAA0C;AACP;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,IAAI,GAAG,QAAQ,KAAK;AACxF,4CAA4C,UAAU;AACtD;AACA;AACA;AACA,iBAAiB;AACjB;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB,yDAAgB;AACpC,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,kDAAU;AACzD;AACA;AACA;AACA;AACA,YAAY,kDAAU;AACtB;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;ACrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACV8B;AACmB;AACf;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,QAAQ,GAAG,QAAQ,QAAQ,eAAe,SAAS;AAC3G,sBAAsB;AACtB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mDAAW;AACf;AACA;AACA;AACA,qCAAqC,yBAAyB;AAC9D;AACA;AACA;AACA,oCAAoC,mDAAW;AAC/C,SAAS;AACT;AACA;AACA;AACA,YAAY,iDAAS;AACrB,YAAY,mDAAM;AAClB,SAAS;AACT,MAAM;AACN,QAAQ,mDAAW;AACnB;AACA;AACA;AACA;AACA;AACA,YAAY,iDAAS;AACrB,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;;;ACvDwC;AACQ;AAChD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,QAAQ,qDAAY;AACpB,QAAQ,+DAAe;AACvB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C,kCAAkC,gBAAgB;AAClD,kCAAkC,eAAe;AACjD,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX,KAAK;AACL;AACA;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA,KAAK;AACL;AACA;AACA,iEAAe,MAAM;;;;;;UCxCrB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN0D;AACK;AAC/D;AACA;AACA,IAAI,+DAAY;AAChB,IAAI,2DAAQ;AACZ,IAAI,8EAAsB;AAC1B,CAAC,E","sources":["webpack:///./js/modules/clickTriggers.js","webpack:///./js/modules/image.js","webpack:///./js/modules/modal.js","webpack:///./js/modules/render.js","webpack:///./js/modules/requests.js","webpack:///./js/modules/slider.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./js/script.js"],"sourcesContent":["import {renderImageModal} from './render';\r\nimport {closeModal} from './modal';\r\n\r\nfunction mapClickTrigger(pointsArray, planSelector, pointSelector) {\r\n    let isAddPoint = false;\r\n    let isUpdatePoint = false;\r\n\r\n    // Функция, которая включает добавление точек на план\r\n    const addPointToggle = () => {\r\n        isAddPoint = (isAddPoint) ? false : true;\r\n        console.log(isAddPoint);\r\n    };\r\n\r\n    // Функция, которая включает обновление точек на плане\r\n    const updatePointToggle = ()=> {\r\n        isUpdatePoint = (isUpdatePoint) ? false : true;\r\n    };\r\n\r\n    const plan = document.querySelector(planSelector);\r\n    plan.addEventListener('click', (event) => {\r\n        const pointId = +event.target.getAttribute(\"data-id\");\r\n        if (isUpdatePoint && (event.target && event.target.className === pointSelector)) {\r\n            event.preventDefault();\r\n            if (confirm(\"Обновить точку?\")) {\r\n                const description = prompt(\"Введите дату фото\", \"Дата съемки: dd.mm.yyyy\");\r\n                const pointImgUrl = prompt(\"Введите путь к фото\", \"images/photo_dd_mm_yy/.jpg\");\r\n                if (description === null || pointImgUrl === null) {\r\n                    return;\r\n                }\r\n                // Продолжить код с обновлением точки\r\n                let formData = new FormData();\r\n                formData.append(\"id\", pointId);\r\n                formData.append(\"description\", description);\r\n                formData.append(\"url\", pointImgUrl);\r\n                fetch('update_point.php', {\r\n                    method: 'POST',\r\n                    body: formData\r\n                })\r\n                .then(data => data.text())\r\n                .then((response) => {\r\n                    if (response === \"1\") {\r\n                        console.log(\"Точка обновлена!\");\r\n                    }\r\n                });\r\n            }\r\n        } else if (isAddPoint && (event.target && event.target.tagName === \"IMG\")) {\r\n            if (confirm(\"Добавить новую точку на план?\")) {\r\n                const top = event.offsetY - 10, left = event.offsetX - 10;\r\n                const pointName = prompt(\"Введите имя для точки\", \"имя точки\");\r\n                const pointTitle = prompt(\"Введите название для фото\", \"название фото\");\r\n                const pointDate = prompt(\"Введите дату фото\",\"Последняя дата съемки: dd.mm.yyyy\");\r\n                const pointImgUrl = prompt(\"Введите путь к фото\",\"images/.jpg\");\r\n                if (pointName === null || pointTitle === null || pointDate === null || pointImgUrl === null) {\r\n                    return;\r\n                }\r\n\r\n                let formData = new FormData();\r\n                formData.append(\"x\", left);\r\n                formData.append(\"y\", top);\r\n                formData.append(\"name\", pointName);\r\n                formData.append(\"title\", pointTitle);\r\n                formData.append(\"date\", pointDate);\r\n                formData.append(\"url\", pointImgUrl);\r\n\r\n                fetch(\"add_point.php\", {\r\n                    method: 'POST',\r\n                    body: formData\r\n                })\r\n                .then(data => data.text())\r\n                .then((response) => {\r\n                    if (response === \"1\") {\r\n                        console.log(\"Точка добавлена!\");\r\n                        // Добавить data-id из add_points.php\r\n                        plan.insertAdjacentHTML(\r\n                            \"beforeend\",\r\n                            `<div class=\"plan__point\" style=\"top: ${top}px;left: ${left}px\" data-id=\"\">\r\n                                    <span>${pointName}</span>\r\n                                </div>`\r\n                        );\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            if (event.target && event.target.className === pointSelector) {\r\n                let formData = new FormData();\r\n                formData.append(\"id\", pointId);\r\n                fetch('select_images_archive.php', {\r\n                    method: 'POST',\r\n                    body: formData\r\n                })\r\n                .then(data => data.json())\r\n                .then(imagesArray => {\r\n                    imagesArray.push({\r\n                        url: pointsArray[pointId-1].url,\r\n                        description: pointsArray[pointId-1].date\r\n                    });\r\n                    renderImageModal(pointsArray, pointId, imagesArray.reverse());\r\n                });\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction modalCloseClickTrigger() {\r\n    const modal = document.querySelector(\".modal\");\r\n    const modalClose = document.querySelector(\".modal__close\");\r\n\r\n    // Закрыть модальное окно, если кликнули на элемент крестик\r\n    modalClose.addEventListener('click', () => closeModal(\".modal\"));\r\n\r\n    // Закрыть модальное окно, если кликнули не на окно\r\n    modal.addEventListener('click', (e) => {\r\n        if (e.target === modal) {\r\n            closeModal(\".modal\");\r\n        }\r\n    });\r\n}\r\n\r\nexport {mapClickTrigger, modalCloseClickTrigger};","function createImage(src, inner) {\r\n    return new Promise((resolve, reject) => {\r\n        const imgDiv = document.createElement(\"div\");\r\n        imgDiv.classList.add('modal__image-card');\r\n        inner.prepend(imgDiv);\r\n        const image = document.createElement(\"img\");\r\n        image.onload = () => resolve(image);\r\n        image.classList.add('modal__img');\r\n        imgDiv.prepend(image);\r\n        image.setAttribute(\"src\", src);\r\n    });\r\n}\r\n\r\nfunction clearImages() {\r\n    const modalImageCards = document.querySelectorAll(\".modal__image-card\");\r\n    modalImageCards.forEach((card) => {\r\n        card.remove();\r\n    });\r\n}\r\n\r\nexport {createImage, clearImages};","// Функция, которая открывает модальное окно\r\nfunction openModal(modalSelector) {\r\n    document.querySelector(modalSelector).classList.add('show');\r\n}\r\n\r\n// Функция, которая закрывает модальное окно\r\nfunction closeModal(modalSelector) {\r\n    document.querySelector(modalSelector).classList.remove('show');\r\n    document.querySelector(\".modal__image-inner\").style.transition = \"none\";\r\n}\r\n\r\nexport {openModal, closeModal};","import slider from './slider';\r\nimport {createImage, clearImages} from './image';\r\nimport {openModal} from './modal';\r\n\r\nfunction renderPoints(pointsArray, planSelector){\r\n    if (pointsArray.length > 0) {\r\n        const plan = document.querySelector(planSelector);\r\n        pointsArray.forEach((point) => {\r\n            plan.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"plan__point\" style=\"top: ${point.y}px;left: ${point.x}px\" data-id=\"${point.id}\">\r\n                    ${point.name}\r\n                </div>`\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nfunction renderImageModal(pointsArray, pointId, imagesArray) {\r\n    const modalText = document.querySelector(\".modal__text\"),\r\n          modalTitle = document.querySelector(\".modal__title\"),\r\n          modalDate = document.querySelector(\".modal__date\"),\r\n          modalImageInner = document.querySelector(\".modal__image-inner\"),\r\n          nextButton = document.querySelector(\".modal__next\"),\r\n          backButton = document.querySelector(\".modal__back\"),\r\n          loader = document.querySelector(\".loader\"),\r\n          imagesPromiseArray = [];\r\n\r\n    clearImages();\r\n    modalText.classList.add(\"hide\");\r\n    modalTitle.textContent = pointsArray[pointId-1].title;\r\n    modalDate.textContent = imagesArray[0].description;\r\n    modalImageInner.style.width = `${imagesArray.length * 100}%`;\r\n    loader.classList.add(\"show\");\r\n    if (imagesArray.length > 1) {\r\n        imagesArray.forEach((el, index) => {\r\n            imagesPromiseArray.push(createImage(imagesArray[index].url, modalImageInner));\r\n        });\r\n        Promise.all(imagesPromiseArray)\r\n        .then(() => {\r\n            loader.classList.remove(\"show\");\r\n            openModal('.modal');\r\n            slider(imagesArray);\r\n        });\r\n    } else {\r\n        createImage(imagesArray[0].url, modalImageInner)\r\n        .then(() => {\r\n            modalImageInner.style.transform = 'none';\r\n            nextButton.classList.add(\"hide\");\r\n            backButton.classList.add(\"hide\");\r\n            loader.classList.remove(\"show\");\r\n            openModal('.modal');\r\n        });\r\n    }\r\n}\r\n\r\nexport {renderPoints, renderImageModal};","import { renderPoints } from \"./render\";\r\nimport {mapClickTrigger} from \"./clickTriggers\";\r\n\r\nfunction selectPoints() {\r\n    fetch('select_points.php', {\r\n        method: 'POST'\r\n    })\r\n    .then(data => data.json())\r\n    .then(pointsArray => {\r\n        renderPoints(pointsArray, '.plan');\r\n        mapClickTrigger(pointsArray, '.plan', 'plan__point');\r\n    });\r\n}\r\n\r\nfunction getTable() {\r\n    fetch('get_table.php', {\r\n        method: 'POST'\r\n    })\r\n    .then(data => data.json())\r\n    .then(data => {\r\n        const tbody = document.querySelector(\".main-table\").children[0].children[1];\r\n        data.reverse().forEach((el, index) => {\r\n            // const report = (el.reportBool) ? `<a href=\"#\" data-modal>Открыть</a>` : ``;\r\n            const tr = `<tr>\r\n                            <td>${el.date}</td>\r\n                            <td>${el.numberObject}</td>\r\n                            <td>${el.description}</td>\r\n                            <td>${el.secondName}</td>\r\n                        </tr>`;\r\n            tbody.insertAdjacentHTML('beforeend', tr);\r\n    \r\n            // if (el.reportBool) {\r\n            //     tbody.children[index].children[4].children[0].addEventListener(\"mouseenter\", () => {\r\n            //         modalDialog.createReportDialog();\r\n            //         modalDialog.title.textContent = 'Отчет';\r\n            //         modalDialog.text.textContent = el.reportText;\r\n            //     });\r\n            // }\r\n        });\r\n        //const modalTrigger = document.querySelector('[data-modal]');\r\n    \r\n        //modalTrigger.addEventListener('click', function() {\r\n            //openModal(\".modal\");\r\n        //});\r\n    });\r\n}\r\n\r\nexport {selectPoints, getTable};","function slider(imagesArray) {\r\n    const width = window.getComputedStyle(document.querySelector(\".modal__image-wrapper\")).width,\r\n          nextButton = document.querySelector(\".modal__next\"),\r\n          backButton = document.querySelector(\".modal__back\"),\r\n          modalImageInner = document.querySelector(\".modal__image-inner\"),\r\n          modalDate = document.querySelector(\".modal__date\");\r\n\r\n    nextButton.classList.remove(\"hide\");\r\n    backButton.classList.remove(\"hide\");\r\n    let offset = +width.slice(0, width.length - 2) * (imagesArray.length - 1);\r\n    let imageId = 0;\r\n    modalImageInner.style.transform = `translateX(-${offset}px)`;\r\n    nextButton.addEventListener(\"click\", () => {\r\n        modalImageInner.style.transition = \"0.5s all\";\r\n        if (+offset.toFixed(1) == +(+width.slice(0, width.length - 2) * (imagesArray.length - 1)).toFixed(1)) {\r\n            offset = 0;\r\n            imageId = imagesArray.length - 1;\r\n        } else {\r\n            offset += +width.slice(0, width.length - 2);\r\n            imageId -= 1;\r\n        }\r\n        \r\n        modalImageInner.style.transform = `translateX(-${offset}px)`;\r\n        modalDate.textContent = imagesArray[imageId].description;\r\n    });\r\n    backButton.addEventListener(\"click\", () => {\r\n        modalImageInner.style.transition = \"0.5s all\";\r\n        if (offset == 0) {\r\n            offset = +width.slice(0, width.length - 2) * (imagesArray.length - 1);\r\n            imageId = 0;\r\n        } else {\r\n            offset -= +width.slice(0, width.length - 2);\r\n            imageId += 1;\r\n        }\r\n\r\n        modalImageInner.style.transform = `translateX(-${offset}px)`;\r\n        modalDate.textContent = imagesArray[imageId].description;\r\n    });\r\n}\r\n\r\nexport default slider;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {selectPoints, getTable} from './modules/requests';\r\nimport {modalCloseClickTrigger} from './modules/clickTriggers';\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n    selectPoints();\r\n    getTable();\r\n    modalCloseClickTrigger();\r\n});"],"names":[],"sourceRoot":""}